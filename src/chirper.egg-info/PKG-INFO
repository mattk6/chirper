Metadata-Version: 2.2
Name: chirper
Version: 0.1.0
Summary: A Twitter/X like web application, named Chirper, built using Django.
Requires-Python: >=3.13
Description-Content-Type: text/markdown
Requires-Dist: django>=5.1.5
Requires-Dist: django-allauth>=65.4.1
Requires-Dist: django-redis>=5.4.0
Requires-Dist: channels>=4.2.0
Requires-Dist: asgiref>=3.8.1
Requires-Dist: numpy>=2.1.1
Requires-Dist: matplotlib>=3.9.2
Requires-Dist: opencv-python>=4.11.0.86
Requires-Dist: pillow>=10.4.0
Requires-Dist: requests>=2.32.3
Requires-Dist: aiohttp>=3.11.13
Requires-Dist: black>=25.1.0

# Project Setup and Execution

This project uses a `Makefile` to streamline common development tasks. Here's a breakdown of the available commands:

## Prerequisites

* Python 3.12 or higher
* pip (Python package installer)
* A virtual environment (recommended)
* django-redis (for Channels)
* sqlite3 (or your chosen database)

## Setup

1.  **Create a virtual environment (recommended):**

    ```bash
    python3 -m venv venv
    source venv/bin/activate
    ```

2.  **Install dependencies:**

    ```bash
    make install
    ```

    This command uses `pip install -r requirements.txt` to install all necessary Python packages.

## Running the Application

* **Start the Redis server:**

    ```bash
    make redis
    ```

    This command starts the Redis server, which is required for Django Channels.

* **Start the ASGI server (Daphne):**

    ```bash
    make run
    ```

    This command starts the Daphne server, which runs your Django Channels application. It uses the `DJANGO_SETTINGS_MODULE=conf.settings` environment variable to specify your Django settings file.

## Database Management

* **Create database migrations:**

    ```bash
    make update
    ```

    This command runs `python3 manage.py makemigrations chirper` to create new database migration files for the `chirper` app.

* **Apply database migrations:**

    ```bash
    make migrate
    ```

    This command runs `python3 manage.py migrate` to apply all pending database migrations.

* **Access the SQLite database:**

    ```bash
    make sql
    ```

    This command opens an interactive SQLite shell for your `db.sqlite3` database. (If you are using a different database, you will need to change this command)

## Development Tools

* **Open the Django shell:**

    ```bash
    make debug
    ```

    This command opens a Django interactive shell, allowing you to interact with your Django models and application.

* **Update requirements.txt:**

    ```bash
    make freeze
    ```

    This command uses `pip freeze > requirements.txt` to update the `requirements.txt` file with the currently installed packages and their versions.

## Notes

* Ensure that you have activated your virtual environment before running any of these commands.
* Modify the `Makefile` as needed to customize your development workflow.
* If you are using a database other than sqlite, please update the sql command in the makefile.
